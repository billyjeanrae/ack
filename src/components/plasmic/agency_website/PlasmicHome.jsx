// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7w3AimKvhNQygAijpdB7ms
// Component: Cy-97SYueahC
import * as React from "react";
import { navigate as __gatsbyNavigate } from "gatsby";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  hasVariant,
  initializeCodeComponentStates,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Navbar from "../../Navbar"; // plasmic-import: yZ_cQNVr9Dd_/component
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import HomeFooterTop from "../../HomeFooterTop"; // plasmic-import: SSIvXflUB2k5/component
import TransactionReel from "../../TransactionReel"; // plasmic-import: bczKgsd8lwW1/component
import FooterMain from "../../FooterMain"; // plasmic-import: 3Hx5Xex_O1aO/component
import { useScreenVariants as useScreenVariantsnU8IdsSvi2F6 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nU8idsSVI2F6/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import * as projectcss from "./plasmic.module.css"; // plasmic-import: 7w3AimKvhNQygAijpdB7ms/projectcss
import * as sty from "./PlasmicHome.module.css"; // plasmic-import: Cy-97SYueahC/css
import Icon29Icon from "./icons/PlasmicIcon__Icon29"; // plasmic-import: hLWJiHtF5AVD/icon
import pexelsDivinetechygirl1181562JpgHLCbJk90Kh3 from "./images/pexelsDivinetechygirl1181562Jpg.jpg"; // plasmic-import: H-LCbJK90KH3/picture
import pexelsJopwell2422293JpgY7HywSi0Mo6E from "./images/pexelsJopwell2422293Jpg.jpg"; // plasmic-import: Y7hywSI0MO6E/picture

createPlasmicElementProxy;

export const PlasmicHome__VariantProps = new Array();

export const PlasmicHome__ArgProps = new Array();

const $$ = {};

export function Head() {
  return <></>;
}

function PlasmicHome__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnU8IdsSvi2F6()
  });
  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
          onClick={async event => {
            const $steps = {};
            $steps["updateVariant"] = true
              ? (() => {
                  const actionArgs = {};
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }
                    undefined;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateVariant"] != null &&
              typeof $steps["updateVariant"] === "object" &&
              typeof $steps["updateVariant"].then === "function"
            ) {
              $steps["updateVariant"] = await $steps["updateVariant"];
            }
          }}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          {(() => {
            const child$Props = {
              autoplay: true,
              autoplaySpeed: 3000,
              beforeChange: generateStateOnChangePropForCodeComponents(
                $state,
                "currentSlide",
                ["sliderCarousel", "currentSlide"],
                SliderWrapper_Helpers
              ),
              className: classNames("__wab_instance", sty.sliderCarousel),
              initialSlide: generateStateValueProp($state, [
                "sliderCarousel",
                "currentSlide"
              ]),
              ref: ref => {
                $refs["sliderCarousel"] = ref;
              },
              sliderScopeClassName: sty["sliderCarousel__slider"]
            };
            initializeCodeComponentStates(
              $state,
              [
                {
                  name: "currentSlide",
                  plasmicStateName: "sliderCarousel.currentSlide"
                }
              ],

              [],
              SliderWrapper_Helpers ?? {},
              child$Props
            );
            return (
              <SliderWrapper
                data-plasmic-name={"sliderCarousel"}
                data-plasmic-override={overrides.sliderCarousel}
                {...child$Props}
              >
                <div className={classNames(projectcss.all, sty.freeBox__yLWt)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__raKo2)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mu9Bj)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"foreground3"}
                        data-plasmic-override={overrides.foreground3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.foreground3)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___69XQ3
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1___6WuM
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile") ? (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <h1
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h1,
                                      projectcss.__wab_text,
                                      sty.h1__rgVo8
                                    )}
                                  >
                                    {
                                      "Personalized Strategies for Long-Term Success"
                                    }
                                  </h1>
                                }

                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            ) : (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <h1
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.h1,
                                      projectcss.__wab_text,
                                      sty.h1__qMj76
                                    )}
                                  >
                                    {
                                      "Personalized Strategies for Long-Term Success"
                                    }
                                  </h1>
                                }

                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            )}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xuKlx
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Trust Ackrell Capital Industrial Bank to guide your wealth management journey. Our team of experienced advisors provides tailored investment strategies, comprehensive retirement planning, and expert estate management to help you build and protect your wealth for generations to come."
                              : "Trust Ackrell Capital Industrial Bank to guide your wealth management journey. Our team of experienced advisors provides tailored investment strategies, comprehensive retirement planning, and expert estate management to help you build and protect your wealth for generations to come."}
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___7KHfS
                          )}
                        >
                          <Stack__
                            as={"button"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.button,
                              sty.button___41Rfl
                            )}
                            onClick={async event => {
                              const $steps = {};
                              $steps["goToTransactions"] = true
                                ? (() => {
                                    const actionArgs = {
                                      destination: `/transactions`
                                    };
                                    return (({ destination }) => {
                                      if (
                                        typeof destination === "string" &&
                                        destination.startsWith("#")
                                      ) {
                                        document
                                          .getElementById(destination.substr(1))
                                          .scrollIntoView({
                                            behavior: "smooth"
                                          });
                                      } else {
                                        __gatsbyNavigate(destination);
                                      }
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["goToTransactions"] != null &&
                                typeof $steps["goToTransactions"] ===
                                  "object" &&
                                typeof $steps["goToTransactions"].then ===
                                  "function"
                              ) {
                                $steps["goToTransactions"] = await $steps[
                                  "goToTransactions"
                                ];
                              }
                            }}
                          >
                            {false ? (
                              <Icon29Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__sRtx8
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ibRue
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#000000" }}
                                >
                                  {"LEARN MORE"}
                                </span>
                              </React.Fragment>
                            </div>
                            {false ? (
                              <Icon29Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___7AvjC
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox___5K5)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mnJuW)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__kbLGi)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"foreground5"}
                        data-plasmic-override={overrides.foreground5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.foreground5)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__aTkS
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1___1AhE
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "We are the Business and Consulting Expert"
                              : "Empowering Your Financial Journey"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jy6QB
                            )}
                          >
                            {
                              "Experience the difference with Ackrell Capital Industrial Bank. We offer a comprehensive range of financial services tailored to meet your unique needs. From personal banking to business solutions and wealth management, our expertise and innovative approach ensure that you are supported at every step of your financial journey."
                            }
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tkNpk
                          )}
                        >
                          <Stack__
                            as={"button"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.button,
                              sty.button__uyNby
                            )}
                            onClick={async event => {
                              const $steps = {};
                              $steps["goToTransactions"] = true
                                ? (() => {
                                    const actionArgs = {
                                      destination: `/transactions`
                                    };
                                    return (({ destination }) => {
                                      if (
                                        typeof destination === "string" &&
                                        destination.startsWith("#")
                                      ) {
                                        document
                                          .getElementById(destination.substr(1))
                                          .scrollIntoView({
                                            behavior: "smooth"
                                          });
                                      } else {
                                        __gatsbyNavigate(destination);
                                      }
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["goToTransactions"] != null &&
                                typeof $steps["goToTransactions"] ===
                                  "object" &&
                                typeof $steps["goToTransactions"].then ===
                                  "function"
                              ) {
                                $steps["goToTransactions"] = await $steps[
                                  "goToTransactions"
                                ];
                              }
                            }}
                          >
                            {false ? (
                              <Icon29Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__qoWzj
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yIqZz
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#000000" }}
                                >
                                  {"LEARN MORE"}
                                </span>
                              </React.Fragment>
                            </div>
                            {false ? (
                              <Icon29Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__vw7ZP
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__amn2X)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___4Aib4)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__i9J4)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"foreground4"}
                        data-plasmic-override={overrides.foreground4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.foreground4)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qNWbC
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__xtOKr
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "We are the Business and Consulting Expert"
                              : "Innovative Solutions for Your Success"}
                          </h1>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vfngV
                            )}
                          >
                            {
                              "At Ackrell Capital Industrial Bank, we are dedicated to helping businesses thrive. Our customized financial solutions, including competitive loans, efficient merchant services, and advanced cash management tools, are designed to support your growth and success. Partner with us to drive your business forward with confidence."
                            }
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__meIt
                          )}
                        >
                          <Stack__
                            as={"button"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.button,
                              sty.button__pqkTc
                            )}
                            disabled={false}
                            onClick={async event => {
                              const $steps = {};
                              $steps["goToServices"] = true
                                ? (() => {
                                    const actionArgs = {
                                      destination: `/services`
                                    };
                                    return (({ destination }) => {
                                      if (
                                        typeof destination === "string" &&
                                        destination.startsWith("#")
                                      ) {
                                        document
                                          .getElementById(destination.substr(1))
                                          .scrollIntoView({
                                            behavior: "smooth"
                                          });
                                      } else {
                                        __gatsbyNavigate(destination);
                                      }
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["goToServices"] != null &&
                                typeof $steps["goToServices"] === "object" &&
                                typeof $steps["goToServices"].then ===
                                  "function"
                              ) {
                                $steps["goToServices"] = await $steps[
                                  "goToServices"
                                ];
                              }
                            }}
                          >
                            {false ? (
                              <Icon29Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___1Tg2D
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0J4Gm
                              )}
                              tabIndex={0}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#000000" }}
                                >
                                  {"LEARN MORE"}
                                </span>
                              </React.Fragment>
                            </div>
                            {false ? (
                              <Icon29Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__wH8Oh
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                  </div>
                </div>
              </SliderWrapper>
            );
          })()}
          <HomeFooterTop
            data-plasmic-name={"homeFooterTop"}
            data-plasmic-override={overrides.homeFooterTop}
            className={classNames("__wab_instance", sty.homeFooterTop)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__zrAuj)} />
          <div className={classNames(projectcss.all, sty.freeBox___9U8Jo)}>
            <div
              data-plasmic-name={"trouble"}
              data-plasmic-override={overrides.trouble}
              className={classNames(projectcss.all, sty.trouble)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__yw2U7)}
              >
                <div className={classNames(projectcss.all, sty.column___6CkTd)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__pIkr3)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "237px"
                        : "480px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"auto"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: pexelsDivinetechygirl1181562JpgHLCbJk90Kh3,
                      fullWidth: 5889,
                      fullHeight: 3931,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__f8FS3)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__vkmyZ)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "292px"
                        : "480px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"auto"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "100%"
                        : "auto"
                    }
                    loading={"lazy"}
                    src={{
                      src: pexelsJopwell2422293JpgY7HywSi0Mo6E,
                      fullWidth: 3600,
                      fullHeight: 2558,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column___0CDpf)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zQVpN)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__sfItr
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "What We Do"
                        : "What We Do"}
                    </h2>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pzUSe
                      )}
                    >
                      {
                        "At Ackrell Capital Industrial Bank, we provide an extensive suite of services tailored to address the diverse financial requirements of our clients. Whether you are an individual planning for a secure future, a business striving for growth, or seeking specialized wealth management expertise, we offer comprehensive solutions to help you achieve your financial objectives."
                      }
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__hCD3)}
                    >
                      <Stack__
                        as={"button"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          sty.button__brVlK
                        )}
                        onClick={async event => {
                          const $steps = {};
                          $steps["goToServices"] = true
                            ? (() => {
                                const actionArgs = { destination: `/services` };
                                return (({ destination }) => {
                                  if (
                                    typeof destination === "string" &&
                                    destination.startsWith("#")
                                  ) {
                                    document
                                      .getElementById(destination.substr(1))
                                      .scrollIntoView({ behavior: "smooth" });
                                  } else {
                                    __gatsbyNavigate(destination);
                                  }
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["goToServices"] != null &&
                            typeof $steps["goToServices"] === "object" &&
                            typeof $steps["goToServices"].then === "function"
                          ) {
                            $steps["goToServices"] = await $steps[
                              "goToServices"
                            ];
                          }
                        }}
                      >
                        {false ? (
                          <Icon29Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zgZi8
                            )}
                            role={"img"}
                          />
                        ) : null}
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fRsQz
                          )}
                        >
                          {"LEARN MORE"}
                        </div>
                        {false ? (
                          <Icon29Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__bbOj
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
            </div>
          </div>
          <TransactionReel
            data-plasmic-name={"transactionReel"}
            data-plasmic-override={overrides.transactionReel}
            className={classNames("__wab_instance", sty.transactionReel)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__berde)}>
            <div className={classNames(projectcss.all, sty.freeBox__j9Jx)}>
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1___5Se9G
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "var(--token-KD_yGDQ_425a)" }}
                  >
                    {"Why Choose Us?"}
                  </span>
                </React.Fragment>
              </h1>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__gZZ)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__sY7Al)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__sjSwh)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fl9Cl)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__ctlgg
                      )}
                    >
                      {"Trusted Expertise"}
                    </h2>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ocmew)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qAeNl
                      )}
                    >
                      {
                        " With decades of experience, Ackrell Capital Industrial Bank stands as a beacon of trust and reliability in the financial sector."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <div className={classNames(projectcss.all, sty.column__h8Uym)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__y12JY)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__amoVy
                      )}
                    >
                      {"Real solutions"}
                    </h2>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pE9Gr)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__is29
                      )}
                    >
                      {
                        "Whether you need personal banking, business financing, or wealth management, we offer a suite of products tailored to your needs."
                      }
                    </div>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__cnOUe)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gBdwU)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2___6I9Bo
                      )}
                    >
                      {"Innovative Technology"}
                    </h2>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__z4DO)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yYau
                      )}
                    >
                      {
                        "Experience the convenience of our cutting-edge banking technology designed to simplify your financial life."
                      }
                    </div>
                  </Stack__>
                </div>
              </Stack__>
            </div>
          </div>
          <FooterMain
            data-plasmic-name={"footerMain"}
            data-plasmic-override={overrides.footerMain}
            className={classNames("__wab_instance", sty.footerMain)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "sliderCarousel",
    "foreground3",
    "foreground5",
    "foreground4",
    "homeFooterTop",
    "trouble",
    "transactionReel",
    "footerMain"
  ],

  navbar: ["navbar"],
  sliderCarousel: [
    "sliderCarousel",
    "foreground3",
    "foreground5",
    "foreground4"
  ],

  foreground3: ["foreground3"],
  foreground5: ["foreground5"],
  foreground4: ["foreground4"],
  homeFooterTop: ["homeFooterTop"],
  trouble: ["trouble"],
  transactionReel: ["transactionReel"],
  footerMain: ["footerMain"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHome__ArgProps,
          internalVariantPropNames: PlasmicHome__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    foreground3: makeNodeComponent("foreground3"),
    foreground5: makeNodeComponent("foreground5"),
    foreground4: makeNodeComponent("foreground4"),
    homeFooterTop: makeNodeComponent("homeFooterTop"),
    trouble: makeNodeComponent("trouble"),
    transactionReel: makeNodeComponent("transactionReel"),
    footerMain: makeNodeComponent("footerMain"),
    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
