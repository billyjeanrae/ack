// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7w3AimKvhNQygAijpdB7ms
// Component: bczKgsd8lwW1
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  hasVariant,
  initializeCodeComponentStates,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import { useScreenVariants as useScreenVariantsnU8IdsSvi2F6 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nU8idsSVI2F6/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import * as projectcss from "./plasmic.module.css"; // plasmic-import: 7w3AimKvhNQygAijpdB7ms/projectcss
import * as sty from "./PlasmicTransactionReel.module.css"; // plasmic-import: bczKgsd8lwW1/css
import nfbjul2020JpgZscaIhw8GoR from "./images/nfbjul2020Jpg.jpg"; // plasmic-import: ZscaIhw8-goR/picture
import qindjul2020PngUrPvbeQgvLqX from "./images/qindjul2020Png.png"; // plasmic-import: UrPvbeQgvLqX/picture
import vuberDec17JpgIk6CLnU4Drhz from "./images/vuberDec17Jpg.jpg"; // plasmic-import: ik6CLnU4Drhz/picture
import alt12TombJpgL67Y2WaifeGb from "./images/alt12TombJpg.jpg"; // plasmic-import: L67Y2WaifeGB/picture
import hearstPng6XIUdwqjnTzt from "./images/hearstPng.png"; // plasmic-import: 6xIUdwqjnTzt/picture
import streelightTombPng8MqjOCePo9CQ from "./images/streelightTombPng.png"; // plasmic-import: 8MqjOCePO9cQ/picture
import mosaicHubTombPngPbi9R36Taic1 from "./images/mosaicHubTombPng.png"; // plasmic-import: PBI9r36Taic1/picture
import prohbtdMar17JpgMko8Yh5DsEGq from "./images/prohbtdMar17Jpg.jpg"; // plasmic-import: mko8yh5dsEGq/picture
import defonceJun17Jpg2Ew8IPg5WeKq from "./images/defonceJun17Jpg.jpg"; // plasmic-import: 2Ew8iPG5WeKq/picture
import allMediaPngFKTybLenlB5A from "./images/allMediaPng.png"; // plasmic-import: fKTybLenlB5A/picture
import addOnAutoJan2014PngXiwqWFtlaTAl from "./images/addOnAutoJan2014Png.png"; // plasmic-import: xiwqWFtlaTAl/picture
import tomJobookitApr2014PngOqb660WqRDiL from "./images/tomJobookitApr2014Png.png"; // plasmic-import: Oqb660WqRDiL/picture

createPlasmicElementProxy;

export const PlasmicTransactionReel__VariantProps = new Array();

export const PlasmicTransactionReel__ArgProps = new Array();

const $$ = {};

function PlasmicTransactionReel__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sliderCarousel2.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel2",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnU8IdsSvi2F6()
  });
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <h1
        data-plasmic-name={"h1"}
        data-plasmic-override={overrides.h1}
        className={classNames(
          projectcss.all,
          projectcss.h1,
          projectcss.__wab_text,
          sty.h1
        )}
      >
        <React.Fragment>
          <span
            className={"plasmic_default__all plasmic_default__span"}
            style={{ color: "#000000" }}
          >
            {"Representative Transactions "}
          </span>
        </React.Fragment>
      </h1>
      <div className={classNames(projectcss.all, sty.freeBox__i8DWa)}>
        {(() => {
          const child$Props = {
            arrows: false,
            autoplay: true,
            autoplaySpeed: 0,
            beforeChange: generateStateOnChangePropForCodeComponents(
              $state,
              "currentSlide",
              ["sliderCarousel2", "currentSlide"],
              SliderWrapper_Helpers
            ),
            centerMode: hasVariant(globalVariants, "screen", "mobile")
              ? false
              : false,
            className: classNames("__wab_instance", sty.sliderCarousel2),
            cssEase: "linear",
            initialSlide: generateStateValueProp($state, [
              "sliderCarousel2",
              "currentSlide"
            ]),
            pauseOnHover: hasVariant(globalVariants, "screen", "mobile")
              ? true
              : undefined,
            ref: ref => {
              $refs["sliderCarousel2"] = ref;
            },
            sliderScopeClassName: sty["sliderCarousel2__slider"],
            speed: 5000
          };
          initializeCodeComponentStates(
            $state,
            [
              {
                name: "currentSlide",
                plasmicStateName: "sliderCarousel2.currentSlide"
              }
            ],

            [],
            SliderWrapper_Helpers ?? {},
            child$Props
          );
          return (
            <SliderWrapper
              data-plasmic-name={"sliderCarousel2"}
              data-plasmic-override={overrides.sliderCarousel2}
              {...child$Props}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fyrDt)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__aad8)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: nfbjul2020JpgZscaIhw8GoR,
                    fullWidth: 255,
                    fullHeight: 282,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__ngVm)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: qindjul2020PngUrPvbeQgvLqX,
                    fullWidth: 256,
                    fullHeight: 282,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___5XlwJ)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: vuberDec17JpgIk6CLnU4Drhz,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vlUfc)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__uv4A)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: alt12TombJpgL67Y2WaifeGb,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__g4N2G)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: hearstPng6XIUdwqjnTzt,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__podje)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: streelightTombPng8MqjOCePo9CQ,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___8DS9)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__kvFZ)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: mosaicHubTombPngPbi9R36Taic1,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___6Bv1T)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: prohbtdMar17JpgMko8Yh5DsEGq,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___8KAYu)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: defonceJun17Jpg2Ew8IPg5WeKq,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qhYwn)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__xiTMo)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: allMediaPngFKTybLenlB5A,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__qgIc)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "100%"
                      : "100%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: addOnAutoJan2014PngXiwqWFtlaTAl,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__jyABh)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: tomJobookitApr2014PngOqb660WqRDiL,
                    fullWidth: 250,
                    fullHeight: 320,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
            </SliderWrapper>
          );
        })()}
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "h1", "sliderCarousel2"],
  h1: ["h1"],
  sliderCarousel2: ["sliderCarousel2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTransactionReel__ArgProps,
          internalVariantPropNames: PlasmicTransactionReel__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTransactionReel__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTransactionReel";
  } else {
    func.displayName = `PlasmicTransactionReel.${nodeName}`;
  }
  return func;
}

export const PlasmicTransactionReel = Object.assign(
  // Top-level PlasmicTransactionReel renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h1: makeNodeComponent("h1"),
    sliderCarousel2: makeNodeComponent("sliderCarousel2"),
    // Metadata about props expected for PlasmicTransactionReel
    internalVariantProps: PlasmicTransactionReel__VariantProps,
    internalArgProps: PlasmicTransactionReel__ArgProps
  }
);

export default PlasmicTransactionReel;
/* prettier-ignore-end */
